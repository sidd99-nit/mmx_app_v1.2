    html_file_name = "file_display.html"
    html_file_path = os.path.join('static','reports', html_file_name)

    # Save the HTML content to the file
    with open(html_file_path, 'w') as html_file:
        html_file.write(html_content)

    # Return the file path to be used in the iframe
    return jsonify({"file_path": f"/get_html/{html_file_name}"}), 200

# route to serve the generated report HTML file
def get_html(filename):
    try:
        return send_from_directory(os.path.join('static','reports'),filename)    
    except FileNotFoundError:
        print("html prop")
        return jsonify({"error":"File not found"}), 404

and


// Function to handle both files after they are selected or dropped
        async function handleFiles() {
            if (files_1 && files_2) {  // Ensures both files are available
                const file_1 = files_1[0];
                const file_2 = files_2[0];

                const formData = new FormData();
                formData.append('file_1', file_1);  // Append the first file to the form data
                formData.append('file_2', file_2);  // Append the second file to the form data

                // Fetch API to send the files to the server for processing
                try {
                    const response = await fetch('/upload', {
                        method: 'POST',
                        body: formData,
                    });

                    if (response.ok) {
                        const result = await response.json();
                        const iframe = document.createElement('iframe');
                        iframe.src = result.file_path;  // Display the generated HTML in the iframe
                        iframe.style.width = '100%';
                        iframe.style.height = '500px';
                        document.getElementById('iframe-container').innerHTML = '';  // Clear previous iframe
                        document.getElementById('iframe-container').appendChild(iframe);
                    } else {
                        const errorResponse = await response.json();
                        alert(`Error uploading file: ${errorResponse.error}`);
                    }
                } catch (error) {
                    alert(`Error uploading file: ${error.message}`);
                }
            }
        }
